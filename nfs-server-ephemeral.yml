apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nfs-server-alpine
    app.kubernetes.io/component: nfs-server-alpine
    app.kubernetes.io/instance: nfs-server-alpine
  name: nfs-server-alpine
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: nfs-server-alpine
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: nfs-server-alpine
    spec:
      containers:
      - env:
        - name: SHARED_DIRECTORY
          value: /nfsshare
        - name: VOLUME_COUNT
          value: "100"
        image: itsthenetwork/nfs-server-alpine:12
        imagePullPolicy: IfNotPresent
        name: nfs-server-alpine
        startupProbe:
          exec:
            command:
              - pidof
              - rpc.mountd
          failureThreshold: 30
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
              - pidof
              - rpc.mountd
        readinessProbe:
          exec:
            command:
              - pidof
              - rpc.mountd
        lifecycle:
          postStart:
            exec:
              command: 
               - "/bin/sh"
               - "-c"
               - >
                 for dir in $(seq ${VOLUME_COUNT}); do mkdir -p $SHARED_DIRECTORY/pv$dir && chmod 777 $SHARED_DIRECTORY/pv$dir; done
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /nfsshare
          name: volume
      volumes:
      - emptyDir: {}
        name: volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nfs-server-alpine
    app.kubernetes.io/component: nfs-server-alpine
    app.kubernetes.io/instance: nfs-server-alpine
  name: nfs-server-alpine
spec:
  ports:
  - port: 2049
    protocol: TCP
    targetPort: 2049
  selector:
    deployment: nfs-server-alpine
  type: ClusterIP